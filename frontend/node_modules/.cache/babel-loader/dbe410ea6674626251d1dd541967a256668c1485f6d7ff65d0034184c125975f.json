{"ast":null,"code":"var _jsxFileName = \"/Users/hallushination/Documents/lumaSpring2025/lumaa-spring-2025-swe/frontend/src/components/register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { registerUser } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  onRegister\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await registerUser(username, password);\n    if (data.id) {\n      alert('Registration successful! Please login.');\n      onRegister();\n    } else {\n      alert('Registration failed. Try a different username.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","registerUser","jsxDEV","_jsxDEV","Register","onRegister","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","data","id","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/Users/hallushination/Documents/lumaSpring2025/lumaa-spring-2025-swe/frontend/src/components/register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { registerUser } from '../api/api';\n\ninterface RegisterProps {\n  onRegister: () => void;\n}\n\nconst Register: React.FC<RegisterProps> = ({ onRegister }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const data = await registerUser(username, password);\n    if (data.id) {\n      alert('Registration successful! Please login.');\n      onRegister();\n    } else {\n      alert('Registration failed. Try a different username.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Register</h2>\n      <div>\n        <label>Username:</label>\n        <input \n          value={username} \n          onChange={(e) => setUsername(e.target.value)} \n          required \n        />\n      </div>\n      <div>\n        <label>Password:</label>\n        <input \n          type=\"password\" \n          value={password} \n          onChange={(e) => setPassword(e.target.value)} \n          required \n        />\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1C,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG,MAAMb,YAAY,CAACM,QAAQ,EAAEE,QAAQ,CAAC;IACnD,IAAIK,IAAI,CAACC,EAAE,EAAE;MACXC,KAAK,CAAC,wCAAwC,CAAC;MAC/CX,UAAU,CAAC,CAAC;IACd,CAAC,MAAM;MACLW,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF,CAAC;EAED,oBACEb,OAAA;IAAMc,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3Bf,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBnB,OAAA;QACEoB,KAAK,EAAEhB,QAAS;QAChBiB,QAAQ,EAAGZ,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBnB,OAAA;QACEwB,IAAI,EAAC,UAAU;QACfJ,KAAK,EAAEd,QAAS;QAChBe,QAAQ,EAAGZ,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAChB,EAAA,CAtCIF,QAAiC;AAAAwB,EAAA,GAAjCxB,QAAiC;AAwCvC,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}