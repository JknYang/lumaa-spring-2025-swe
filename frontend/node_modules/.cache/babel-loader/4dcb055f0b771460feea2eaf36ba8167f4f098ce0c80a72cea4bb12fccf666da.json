{"ast":null,"code":"var _jsxFileName = \"/Users/hallushination/Documents/lumaSpring2025/lumaa-spring-2025-swe/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Login from './components/login';\nimport Register from './components/register';\nimport TaskManager from './components/taskmanager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [showLogin, setShowLogin] = useState(true);\n  const handleLogin = token => {\n    setIsAuthenticated(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowLogin(true),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowLogin(false),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(TaskManager, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : showLogin ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRegister: () => setShowLogin(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Xusl62q0zKBq+xKOYEXgcW7jJMQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Register","TaskManager","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","showLogin","setShowLogin","handleLogin","token","handleLogout","removeItem","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onRegister","_c","$RefreshReg$"],"sources":["/Users/hallushination/Documents/lumaSpring2025/lumaa-spring-2025-swe/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Login from './components/login';\nimport Register from './components/register';\nimport TaskManager from './components/taskmanager';\n\nconst App: React.FC = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [showLogin, setShowLogin] = useState(true);\n\n  const handleLogin = (token: string) => {\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <div>\n      <nav>\n        {isAuthenticated ? (\n          <button onClick={handleLogout}>Logout</button>\n        ) : (\n          <>\n            <button onClick={() => setShowLogin(true)}>Login</button>\n            <button onClick={() => setShowLogin(false)}>Register</button>\n          </>\n        )}\n      </nav>\n      <main>\n        {isAuthenticated ? (\n          <TaskManager />\n        ) : showLogin ? (\n          <Login onLogin={handleLogin} />\n        ) : (\n          <Register onRegister={() => setShowLogin(true)} />\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMgB,WAAW,GAAIC,KAAa,IAAK;IACrCN,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCR,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EACGV,eAAe,gBACdL,OAAA;QAAQgB,OAAO,EAAEH,YAAa;QAAAE,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAE9CpB,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACEf,OAAA;UAAQgB,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAAC,IAAI,CAAE;UAAAK,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzDpB,OAAA;UAAQgB,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAAC,KAAK,CAAE;UAAAK,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC7D;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNpB,OAAA;MAAAe,QAAA,EACGV,eAAe,gBACdL,OAAA,CAACF,WAAW;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACbX,SAAS,gBACXT,OAAA,CAACJ,KAAK;QAACyB,OAAO,EAAEV;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/BpB,OAAA,CAACH,QAAQ;QAACyB,UAAU,EAAEA,CAAA,KAAMZ,YAAY,CAAC,IAAI;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAClD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCID,GAAa;AAAAoB,EAAA,GAAbpB,GAAa;AAsCnB,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}